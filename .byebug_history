exit
continue
ENV['MY_SUPER_SECRET']
ENV
continue
@nugget.valid?
continue
nugget_params
params
@nugget.errors
@nugget.valid?
continue
@nugget.errors.full_messages
@nugget.errors
@nugget.valid?
@nugget
continue
self.object.user_nuggets
self.object.user_nuggets.completed
self.object.user_nuggets
self.object.user_nugget
self.object
self
continue
next
has_many :users
self.methods
self
self.superclass
self.class
self.object
self
id
users
nuggets
nuggest
self
self.object
attributes :id
self
continue
self
continue
self.object.nuggets.first
continue
self.object.nuggets.first
self.object.nuggets.map(&:users)
self.object.nuggets
self.object.nuggets.map{|hash| hash[:users] = 1}
self.object.nuggets.map{|hash| hash}
self.object.nuggets
self.object.nuggest
self.object
self
continue
get_current_user.workspaces.map{|workspace| workspace.themes.map{|theme| theme.nuggets}}
get_current_user.workspaces.map{|workspace| workspace.themes.map{|theme| theme.nuggets.map{|nugget| nugget.users}}}
get_current_user.workspaces.map{|workspace| workspace.themes.map{|theme| theme.nuggets}}
get_current_user.workspaces.map{|workspace| workspace.themes.map{|theme| theme.nuggets}
get_current_user.workspaces.map{|workspace| workspace.themes}
get_current_user.workspaces
get_current_user.workspaces.each{|workspace| workspace.themes}
get_current_user.workspaces.first.themes
get_current_user.workspaces
get_current_user.workspaces.each{|workspace| workspace.themes}
get_current_user.workspaces.each{|workspace| workspace.first.themes}
get_current_user.workspaces.each{|workspace| workspace.themes}
get_current_user.workspaces
get_current_user
